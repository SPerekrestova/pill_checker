# Dockerfile.dev - Development environment for Medical NER service
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    POETRY_VERSION=1.5.1 \
    POETRY_VIRTUALENVS_CREATE=false

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    vim \
    wget \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install development tools
RUN pip install --no-cache-dir \
    pytest \
    pytest-cov \
    black \
    isort \
    ruff \
    pre-commit \
    ipython \
    debugpy

# Copy pyproject.toml and install dependencies
COPY pyproject.toml .
RUN pip install -e ".[dev]"

# Copy the rest of the application code
COPY . .

# Set up pre-commit hooks
RUN git init && pre-commit install || true

# Install development server with hot-reload capability
RUN pip install --no-cache-dir uvicorn[standard]

# Expose ports for API and remote debugging
EXPOSE 8081 5678

# Create an entrypoint script with debugging options
RUN echo '#!/bin/bash\n\
if [ "$1" = "debug" ]; then\n\
  echo "Starting in debug mode on port 5678..."\n\
  python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn medical_ner.main:app --host 0.0.0.0 --port 8081 --reload\n\
elif [ "$1" = "test" ]; then\n\
  echo "Running tests..."\n\
  pytest "$@"\n\
elif [ "$1" = "lint" ]; then\n\
  echo "Running linters..."\n\
  isort src tests\n\
  black src tests\n\
  ruff src tests\n\
elif [ "$1" = "shell" ]; then\n\
  echo "Starting IPython shell..."\n\
  ipython\n\
else\n\
  echo "Starting development server..."\n\
  uvicorn medical_ner.main:app --host 0.0.0.0 --port 8081 --reload\n\
fi' > /app/docker-entrypoint.sh \
&& chmod +x /app/docker-entrypoint.sh

ENTRYPOINT ["/app/docker-entrypoint.sh"]